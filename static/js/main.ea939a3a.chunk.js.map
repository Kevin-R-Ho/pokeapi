{"version":3,"sources":["services/Pokemon.js","components/Card/PokemonCardStyle.js","components/Card/pokemonType.js","components/Card/PokemonCard.js","components/Navbar/PokeNavbarStyle.js","components/Navbar/PokeNavbar.js","components/assets/pokemonBackground.png","App.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","Frame","styled","div","Card","CardHeader","CardTypes","Types","p","ImgContainer","typeColors","bugs","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","PokemonCard","pokemon","name","toLowerCase","split","map","letter","charAt","toUpperCase","substring","join","types","type","style","backgroundColor","pokemonType","src","sprites","front_default","alt","Nav","nav","Title","Credit","PokeNavbar","href","App","useState","pokemonData","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","baseURL","useEffect","response","next","previous","loadingPokemon","results","fetchData","prev","all","pokemonRecord","className","onClick","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea939a3a.chunk.js","sourcesContent":["\r\n// function to grab array of objects from API via Promises and\r\n// resolves into json data\r\nexport async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport async function getPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            resolve(data);\r\n        })\r\n    })\r\n}","import styled from 'styled-components';\r\n\r\n\r\nexport const Frame = styled.div`\r\n    padding: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const Card = styled.div`\r\n    border: 1px solid rgba(0,0,0, 0.2);\r\n    margin: 7px;\r\n    min-width: 300px;\r\n    background-color: wheat;\r\n    border-radius: 12px;\r\n`\r\n\r\nexport const CardHeader = styled.div`\r\n    display: flex;\r\n    border: 1px solid rgba(0,0,0, 0.2);\r\n    padding: 5px;\r\n    justify-content: center;\r\n    background-color: rgba(158, 158, 158, 0.6);\r\n    border-radius: 11px;\r\n`\r\n\r\nexport const CardTypes = styled.div`\r\n    display: flex;\r\n    margin: 5px;\r\n    justify-content: center;\r\n`\r\n\r\nexport const Types = styled.p`\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    background-color: lightblue;\r\n    padding: 5px 15px 5px 15px;\r\n    border-radius: 10px;\r\n    font-size: small;\r\n    font-weight: 500;\r\n`\r\n\r\nexport const ImgContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Image = styled.div`\r\n    \r\n`","const typeColors = {\r\n    bugs: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Frame, Card, CardHeader, CardTypes, Types, ImgContainer} from './PokemonCardStyle'\r\nimport pokemonType from './pokemonType';\r\n\r\n\r\nconst PokemonCard = ({pokemon}) => {\r\n    return (\r\n        <Frame>\r\n            <Card>\r\n            <CardHeader key={pokemon.name}>{pokemon.name.toLowerCase().split(\" \")\r\n            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1)).join(' ')}\r\n            </CardHeader>\r\n                <CardTypes>\r\n                    {pokemon.types.map(type => {\r\n                        return(<Types style={{backgroundColor: pokemonType[type.type.name]}}>{type.type.name}</Types>)})}\r\n                </CardTypes>\r\n                <ImgContainer>\r\n                    <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n                </ImgContainer>\r\n                    {/* <div className=\"card-body mx auto\">\r\n                        <p className=\"title\">Weight: </p><p>{pokemon.weight}</p>\r\n                        <p className=\"title\">Height: </p><p>{pokemon.height}</p>\r\n                        <p className=\"title\">Abilities: </p><p>{pokemon.abilities[0].ability.name}</p>\r\n                    </div> */}\r\n            </Card>\r\n        </Frame>\r\n    )\r\n}\r\n\r\nexport default PokemonCard;","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n    display: flex;\r\n    height: 50px;\r\n    background-color: red;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n`\r\nexport const Title = styled.a`\r\n    color: #fff;\r\n    font-size: 20px;\r\n    margin-left: 20px;\r\n    align-items: center;\r\n    line-height: 45px;\r\n`\r\n\r\nexport const Credit = styled.p`\r\n    color: #fff;\r\n    font-size: small;\r\n    margin-right: 20px;\r\n`","import React from 'react';\r\nimport {Nav, Title, Credit} from './PokeNavbarStyle';\r\n\r\nconst PokeNavbar = () => {\r\n    return (\r\n        <Nav>\r\n            <Title>PokeAPI</Title>\r\n            <Credit>Information provided by &nbsp;\r\n                <a href=\"https://pokeapi.co/\">Pokeapi.co</a>\r\n            </Credit>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default PokeNavbar;","export default __webpack_public_path__ + \"static/media/pokemonBackground.20291847.png\";","import React, {useState, useEffect} from 'react';\nimport {getAllPokemon, getPokemon} from './services/Pokemon.js'\nimport PokemonCard from './components/Card/PokemonCard.js';\nimport Navbar from './components/Navbar/PokeNavbar.js';\nimport './App.css'\nimport Background from './components/assets/pokemonBackground.png';\n\nfunction App() {\n  // declare state variables for dynamically moving parts in the App // pokemonData // pages\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextPage, setNextPage] = useState('');\n  const [prevPage, setPrevPage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon';\n\n  //manipulating states on each render and each update\n  //function for API call and set data to states\n  //1. grabs list of pokemon via getAllPokemon 2. loads next and previous pages 3. grabs data for those pokemon 4. loading is set to false because information successfully loaded\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(baseURL);\n      setNextPage(response.next);\n      setPrevPage(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n  // running the defined fetchData function\n    fetchData();\n  // dependency belongs in bracket\n  // if nothing is onside the brackets, it will only load once\n  }, [])\n \n  //function for next page which fetches next list of pokemon and all the pokemon's data\n  const next = async () => {\n    setLoading(true)\n    let data = await getAllPokemon(nextPage)\n    await loadingPokemon(data.results)\n    setNextPage(data.next);\n    setPrevPage(data.previous);\n    setLoading(false);\n  }\n  \n  //function for previous page which fetches next list of pokemon and all the pokemon's data\n    const prev = async () => {\n    if (!prevPage) return;\n    setLoading(true)\n    let data = await getAllPokemon(prevPage)\n    await loadingPokemon(data.results)\n    setNextPage(data.next);\n    setPrevPage(data.previous);\n    setLoading(false);\n  }\n\n  // 2nd call to API for the pokemonData for each pokemon\n  const loadingPokemon = async (data) => {\n    let pokemonData = await Promise.all(\n      data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }))\n\n    setPokemonData(pokemonData)\n  }\n\n  //console.log(pokemonData)\n\n  return (\n      <div className=\"background\">\n        <Navbar />\n      { \n        loading ? (<h1>Loading...</h1>) : (\n        <>\n          <div className=\"btn\">\n            <button onClick={prev}>Previous</button>\n            <button onClick={next}>Next</button>\n          </div>\n        \n            <div className=\"container\">\n              {pokemonData.map((pokemon, i) => {\n                return <PokemonCard key={i} pokemon={pokemon} />\n              })}\n          </div>\n       </>\n       )\n      }\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}